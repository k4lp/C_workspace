#include<stdio.h>
#include<stdlib.h>
#include<ctype.h>

#define SIZE 100

typedef struct _node {
	int data[SIZE];
	int top;
} node;

node *pu;

void initialize() {
	pu = (node*)malloc(sizeof(node));
	pu->top = -1;
}

int isempty() {
	return (pu->top == -1);
}

int isfull() {
	return (pu->top == SIZE -1);
}

int pop() {
	if(isempty())
		return '$';
	else
		return pu->data[pu->top--];
}

void push(int x) {
	if(isfull)return;
	else
		pu->data[++pu->top] = x;
}

int peek() {
	if(isempty())
		return '$';
	else
		return pu->data[pu->top];
}

int out(int x) {
	if( x == '+' || x == '-')
		return 1;
	else if( x == '*' || x == '/')
		return 3;
	else if( x == '(')
		return 7;
	else if( x == ')')
		return 0;
	else
		return 9;
}

int in(int x) {
	if( x == '+' || x == '-')
		return 3;
	else if( x == '*' || x == '/')
		return 4;
	else if( x == '(')
		return 0;
	else
		return 9;
}
